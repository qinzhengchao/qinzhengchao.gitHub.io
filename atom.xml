<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qinzhengchao.github.io/"/>
  <updated>2019-03-07T15:15:55.308Z</updated>
  <id>http://qinzhengchao.github.io/</id>
  
  <author>
    <name>qinzhengchao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>电机驱动</title>
    <link href="http://qinzhengchao.github.io/2019/03/06/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/"/>
    <id>http://qinzhengchao.github.io/2019/03/06/电机驱动/</id>
    <published>2019-03-06T14:26:55.000Z</published>
    <updated>2019-03-07T15:15:55.308Z</updated>
    
    <content type="html"><![CDATA[<p>this is the third passage of HEXO<br>SEVO 实验室<br><a id="more"></a></p><h1 id="电机驱动相关资料"><a href="#电机驱动相关资料" class="headerlink" title="电机驱动相关资料"></a><strong>电机驱动相关资料</strong></h1><h3 id="电机驱动MOS管的选型："><a href="#电机驱动MOS管的选型：" class="headerlink" title="电机驱动MOS管的选型："></a><strong>电机驱动MOS管的选型：</strong></h3><p>正确选择MOS管是很重要的一个环节，MOS管选择不好有可能影响到整个电路的效率和成本。</p><h5 id="第一步：选用N沟道还是P沟道"><a href="#第一步：选用N沟道还是P沟道" class="headerlink" title="第一步：选用N沟道还是P沟道"></a>第一步：选用N沟道还是P沟道</h5><p> 为设计选择正确器件的第一步是决定采用N沟道还是P沟道MOS管。在典型的功率应用中，当一个MOS管接地，而负载连接到干线电压上时，该MOS管就构成了低压侧开关。在低压侧开关中，应采用N沟道MOS管，这是出于对关闭或导通器件所需电压的考虑。当MOS管连接到总线及负载接地时，就要用高压侧开关。通常会在这个拓扑中采用P沟道MOS管，这也是出于对电压驱动的考虑。 要选择适合应用的器件，必须确定驱动器件所需的电压，以及在设计中最简易执行的方法。下一步是确定所需的额定电压，或者器件所能承受的最大电压。额定电压越大，器件的成本就越高。根据实践经验，额定电压应当大于干线电压或总线电压。这样才能提供足够的保护，使MOS管不会失效。就选择MOS管而言，必须确定漏极至源极间可能承受的最大电压，即最大VDS.知道MOS管能承受的最大电压会随温度而变化这点十分重要。设计人员必须在整个工作温度范围内测试电压的变化范围。额定电压必须有足够的余量覆盖这个变化范围，确保电路不会失效。设计工程师需要考虑的其他安全因素包括由开关电子设备（如电机或变压器）诱发的电压瞬变。不同应用的额定电压也有所不同；通常，便携式设备为20V、FPGA电源为20~30V、85~220VAC应用为450~600V.</p><h5 id="第二步：确定额定电流"><a href="#第二步：确定额定电流" class="headerlink" title="第二步：确定额定电流"></a>第二步：确定额定电流</h5><p> 第二步是选择MOS管的额定电流。视电路结构而定，该额定电流应是负载在所有情况下能够承受的最大电流。与电压的情况相似，设计人员必须确保所选的MOS管能承受这个额定电流，即使在系统产生尖峰电流时。两个考虑的电流情况是连续模式和脉冲尖峰。在连续导通模式下，MOS管处于稳态，此时电流连续通过器件。脉冲尖峰是指有大量电涌（或尖峰电流）流过器件。一旦确定了这些条件下的最大电流，只需直接选择能承受这个最大电流的器件便可。 选好额定电流后，还必须计算导通损耗。在实际情况下，MOS管并不是理想的器件，因为在导电过程中会有电能损耗，这称之为导通损耗。MOS管在”导通”时就像一个可变电阻，由器件的RDS（ON）所确定，并随温度而显著变化。器件的功率耗损可由Iload2×RDS（ON）计算，由于导通电阻随温度变化，因此功率耗损也会随之按比例变化。对MOS管施加的电压VGS越高，RDS（ON）就会越小；反之RDS（ON）就会越高。对系统设计人员来说，这就是取决于系统电压而需要折中权衡的地方。对便携式设计来说，采用较低的电压比较容易（较为普遍），而对于工业设计，可采用较高的电压。注意RDS（ON）电阻会随着电流轻微上升。关于RDS（ON）电阻的各种电气参数变化可在制造商提供的技术资料表中查到。 技术对器件的特性有着重大影响，因为有些技术在提高最大VDS时往往会使RDS（ON）增大。对于这样的技术，如果打算降低VDS和RDS（ON），那么就得增加晶片尺寸，从而增加与之配套的封装尺寸及相关的开发成本。业界现有好几种试图控制晶片尺寸增加的技术，其中最主要的是沟道和电荷平衡技术。 在沟道技术中，晶片中嵌入了一个深沟，通常是为低电压预留的，用于降低导通电阻RDS（ON）。为了减少最大VDS对RDS（ON）的影响，开发过程中采用了外延生长柱/蚀刻柱工艺。例如，飞兆半导体开发了称为SupeRFET的技术，针对RDS（ON）的降低而增加了额外的制造步骤。这种对RDS（ON）的关注十分重要，因为当标准MOSFET的击穿电压升高时，RDS（ON）会随之呈指数级增加，并且导致晶片尺寸增大。SuperFET工艺将RDS（ON）与晶片尺寸间的指数关系变成了线性关系。这样，SuperFET器件便可在小晶片尺寸，甚至在击穿电压达到600V的情况下，实现理想的低RDS（ON）。结果是晶片尺寸可减小达35%.而对于最终用户来说，这意味着封装尺寸的大幅减小。</p><h5 id="第三步：确定热要求"><a href="#第三步：确定热要求" class="headerlink" title="第三步：确定热要求"></a>第三步：确定热要求</h5><p> 选择MOS管的下一步是计算系统的散热要求。设计人员必须考虑两种不同的情况，即最坏情况和真实情况。建议采用针对最坏情况的计算结果，因为这个结果提供更大的安全余量，能确保系统不会失效。在MOS管的资料表上还有一些需要注意的测量数据；比如封装器件的半导体结与环境之间的热阻，以及最大的结温。器件的结温等于最大环境温度加上热阻与功率耗散的乘积（结温=最大环境温度+[热阻×功率耗散]）。根据这个方程可解出系统的最大功率耗散，即按定义相等于I2×RDS（ON）。由于设计人员已确定将要通过器件的最大电流，因此可以计算出 不同温度下的RDS（ON）。值得注意的是，在处理简单热模型时，设计人员还必须考虑半导体结/器件外壳及外壳/环境的热容量；即要求印刷电路板和封装不会立即升温。<br>雪崩击穿：是指半导体器件上的反向电压超过最大值，并形成强电场使器件内电流增加。该电流将耗散功率，使器件的温度升高，而且有可能损坏器件。半导体公司都会对器件进行雪崩测试，计算其雪崩电压，或对器件的稳健性进行测试。计算额定雪崩电压有两种方法；一是统计法，另一是热计算。而热计算因为较为实用而得到广泛采用。除计算外，技术对雪崩效应也有很大影响。例如，晶片尺寸的增加会提高抗雪崩能力，最终提高器件的稳健性。对最终用户而言，这意味着要在系统中采用更大的封装件。</p><h5 id="第四步：决定开关性能"><a href="#第四步：决定开关性能" class="headerlink" title="第四步：决定开关性能"></a>第四步：决定开关性能</h5><p> 选择MOS管的最后一步是决定MOS管的开关性能。影响开关性能的参数有很多，但最重要的是栅极/漏极、栅极/ 源极及漏极/源极电容。这些电容会在器件中产生开关损耗，因为在每次开关时都要对它们充电。MOS管的开关速度因此被降低，器件效率也下降。为计算开关过程中器件的总损耗，设计人员必须计算开通过程中的损耗（Eon）和关闭过程中的损耗（Eoff）。MOSFET开关的总功率可用如下方程表达：Psw=（Eon+Eoff）×开关频率。而栅极电荷（Qgd）对开关性能的影响最大。</p><h3 id="续流二极管效果及原理"><a href="#续流二极管效果及原理" class="headerlink" title="续流二极管效果及原理"></a><strong>续流二极管效果及原理</strong></h3><h5 id="1、续流二极管的概述"><a href="#1、续流二极管的概述" class="headerlink" title="1、续流二极管的概述"></a>1、续流二极管的概述</h5><p>续流二极管一般是指反向并联在电感线圈、继电器、可控硅等储能元件两头，在电路中电压或电流呈现骤变时，对电路中其它元件起维护效果的二极管。<br>以电感线圈为例，当线圈中有电流通过时，其两头会有感应电动势发生。当电流消失时，其感应电动势会对电路中的元件发生反向电压。当反向电压高于元件的反向击穿电压时，会把元件如三极管等烧坏。如果在线圈两头反向并联一个二极管(有时分会串接一个电阻)，当流过线圈中的电流消失时，线圈发生的感应电动势就会通过二极管和线圈构成的回路消耗掉，然后保证电路中的其它元件的安全。<br>关于继电器而言，因为继电器的线圈是一个很大的电感，它能以磁场的方式贮存电能，所以当它吸合的时分会存储很多的磁场。当操控继电器的三极管由导通变为到时，线圈就会断电，但此刻线圈里磁场并未当即消失，该磁场将发生反向电动势，其电压可高达1000v，这样的高压很简单击穿如三极管或其它电路元件。如果我们在继电器两头反向并联一个二极管(关于继电器，一般会在续流二极管上串接一个电阻以避免回路电流过高)，因为该二极管的接入正好和反向电动势方向共同，这样就能够把反向电动势以电流的方式消耗掉，然后到达维护其它电路元器件的意图。<br>关于可控硅电路，因为可控硅一般当成一个触点开关来用，如果操控的是大电感负载，一样会发生高压反电动势，其原理和继电器一样。在显示器上相同也会用到续流二极管，一般是用在消磁继电器的线圈上。</p><h5 id="2、续流二极管的作业原理"><a href="#2、续流二极管的作业原理" class="headerlink" title="2、续流二极管的作业原理"></a>2、续流二极管的作业原理</h5><p><img src="/images/续流二极管的典型使用电路.jpg" alt=""><br>上图给出了续流二极管的典型使用电路，其间电阻R视情况决议是否需要。储能元件在VT导通时，电压为上正下负，电流方向从上向下。当VT关断时，储能元件中的电流俄然中止，此刻会发生感应电势，其方向是力求坚持电流不变，即总想坚持储能元件电流方向从上向下。这个感应电势与电源电压迭加后加在VT两头，简单使VT击穿，为此能够加上VD，这样就能够将储能元件发生的感应电势短路掉，然后到达维护VT的意图。我们通常所说的“续流二极管”由于在电路中起到续流的作用而得名，一般选择快速恢复二极管或者肖特基二极管来作为“续流二极管”，它在电路中一般用来保护元件不被感应电压击穿或烧坏，以并联的方式接到产生感应电动势的元件两端，并与其形成回路，使其产生的高电动势在回路以续电流方式消耗，从而起到保护电路中的元件不被损坏的作用。续流二极管经常和储能元件一起使用，防止电压电流突变，提供通路。电感可以经过它给负载提供持续的电流，以免负载电流突变，起到平滑电流的作用。在开关电源中，就能见到一个由二极管和电阻串连起来构成的的续流电路。这个电路与变压器原边并联。当开关管关断时，续流电路可以释放掉变压器线圈中储存的能量，防止感应电压过高，击穿开关管。一般选择快速恢复二极管或者肖特基二极管就可以了，用来把线圈产生的反向电势通过电流的形式消耗掉，可见“续流二极管”并不是一个实质的元件，它只不过在电路中起到的作用称做“续流”。<br><img src="/images/续流二极管工作原理.png" alt=""><br>续流二极管都是并联在线圈的两端，线圈在通过电流时，会在其两端产生感应电动势。当电流消失时，其感应电动势会对电路中的元件产生反向电压。当反向电压高于元件的反向击穿电压时，会使元件如三极管、晶闸管等造成损坏。续流二极管并联在线圈两端，当流过线圈中的电流消失时，线圈产生的感应电动势通过二极管和线圈构成的回路做功而消耗掉，从而保护了电路中的其它元件的安全。 续流二极管在电路中反向并联在继电器或电感线圈的两端，当电感线圈断电时其两端的电动势并不立即消失，此时残余电动势通过一个二极管释放，起这种作用的二极管叫续流二极管。其实还是个二极管只不过它在这起续流作用而已，例如在继电器线圈两端反向接的那个二极管或单向可控硅两端反向接的也都是。为什么要反向接个二极管呢？因为继电器的线圈是一个很大的电感，它能以磁场的形式储存电能，所以当他吸合的时候存储大量的磁场。当控制继电器的三极管由导通变为截断时，线圈断电，但是线圈里有磁场。这时将产生反向电动势，电压可高达1000v以上，很容易击穿三极管或其他电路元件。这是由于二极管的接入正好和反向电动势方向一致，把反向电势通过续流二极管以电流的形式中和掉，从而保护了其他电路元器件，因此它一般是开关速度比较快的二极管，像可控硅电路一样，因为可控硅一般当成一个触点开关来用。如果控制的是大电感负载，一样会产生高压反电动势，原理和继电器一样的。续流二极管在显示器上也用到，一般用在消磁继电器的线圈上。</p><h5 id="3、续流二极管的效果"><a href="#3、续流二极管的效果" class="headerlink" title="3、续流二极管的效果"></a>3、续流二极管的效果</h5><p>续流二极管一般和储能元件一起运用，其效果是避免电路中电压电流的骤变，为反向电动势供给耗电通路。电感线圈能够通过它给负载供给继续的电流，以免负载电流骤变，起到平滑电流的效果！在开关电源中，就能见到一个由二极管和电阻串连起来构成的的续流电路。这个电路与变压器原边并联。当开关管关断时，续流电路能够释放掉变压器线圈中贮存的能量，避免感应电压过高，击穿开关管。 </p><h5 id="4、续流二极管的选型"><a href="#4、续流二极管的选型" class="headerlink" title="4、续流二极管的选型"></a>4、续流二极管的选型</h5><p>一般挑选快速恢复二极管或许肖特基二极管，如FR254、FR255、FR256、FR257、1N5204、1N5205、1N5206、1N5207、1N5208、1N5404、1N5405、5406、5407、5408等。 </p><h5 id="5、续流二极管的使用留意事项"><a href="#5、续流二极管的使用留意事项" class="headerlink" title="5、续流二极管的使用留意事项"></a>5、续流二极管的使用留意事项</h5><p>续流二极管一般使用在开关电源、继电器电路、可控硅电路、IGBT等电路中，其使用十分广泛。在运用时应留意一下几点：<br>(1) 续流二极管是避免直流线圈断电时，发生自感电势形成的高电压对相关元器件形成损害的有效手法<br>(2) 续流二极管的极性不能接错，否则将形成短路事端<br>(3) 续流二极管对直流电压总是反接的，即二极管的负极接直流电的正极点<br>(4) 续流二极管是作业在正导游通状况，并非击穿状况或高速开关状况</p><h3 id="下面是对三款电驱原理图及PCB的比较"><a href="#下面是对三款电驱原理图及PCB的比较" class="headerlink" title="下面是对三款电驱原理图及PCB的比较"></a><strong>下面是对三款电驱原理图及PCB的比较</strong></h3><h5 id="一-假期硬件培训"><a href="#一-假期硬件培训" class="headerlink" title="一.假期硬件培训"></a>一.假期硬件培训</h5><p>下图为原理图<br><img src="/images/假期培训电驱原理图.png" alt=""><br>下图为PCB<br><img src="/images/硬件培训PCB.png" alt=""></p><h5 id="二-电赛用板"><a href="#二-电赛用板" class="headerlink" title="二.电赛用板"></a>二.电赛用板</h5><p>下图为原理图<br><img src="/images/电赛电驱原理图1.png" alt=""><br><img src="/images/电赛电驱原理图2.png" alt=""></p><p>#####在此简单说明MC74HC00AD是什么器件，有什么功能</p><p>MC74HC00AD是一个数字电路，MC是安森美公司（摩托罗拉）的代称，74HC00AD是最基本的数字电路。MC74HC00D是2输入端四与非门.CMOS电路,工作电压2V - 6V.贴片式封装。是用来做集成电路元件的。<br>数字电路：<br>　　用数字信号完成对数字量进行算术运算和逻辑运算的电路称为数字电路，或数字系统。由于它具有逻辑运算和逻辑处理功能，所以又称数字逻辑电路。现代的数字电路由半导体工艺制成的若干数字集成器件构造而成。逻辑门是数字逻辑电路的基本单元。存储器是用来存储二进制数据的数字电路。从整体上看，数字电路可以分为组合逻辑电路和时序逻辑电路两大类。<br>PCB<br><img src="/images/电赛电驱PCB.png" alt=""></p><h5 id="三-2018培训电驱"><a href="#三-2018培训电驱" class="headerlink" title="三.2018培训电驱"></a>三.2018培训电驱</h5><p>下图为原理图<br><img src="/images/2018培训电驱.png" alt=""><br>下图为原理图<br><img src="/images/双路电机驱动图.png" alt=""></p><h1 id="电机控制"><a href="#电机控制" class="headerlink" title="电机控制"></a><strong>电机控制</strong></h1><p>电机控制是指，对电机的启动、加速、运转、减速及停止进行的控制。根据不同电机的类型及电机的使用场合有不同的要求及目的。对于电动机，通过电机控制，达到电机快速启动、快速响应、高效率、高转矩输出及高过载能力的目的。</p><h5 id="启动控制"><a href="#启动控制" class="headerlink" title="启动控制"></a>启动控制</h5><p>三相异步电机启动方式包括：全电压直接启动、降压启动、增加转子回路电阻启动。<br>对于降压启动，主要包括：自耦变压器启动、星-三角变化启动、变电压启动。异步电机启动时，转子处于静止状态，其转差率s=1。此时，T型等效电路的转子侧阻值很低，因此启动电流的大小较大，通过降压启动可以降低启动电流。由于异步电机的启动转矩与电压平方成正比，因此对于降压启动需要保证电机具有一定的启动能力。<br>增加转子回路启动的方法适用于绕线式转子、深槽转子及双笼式转子。对于鼠笼式转子无法使用该方法。<br>增加异步电机转子电阻时，电机的最大转矩将不会受到影响，但最大转矩的出现点将发生移动，电机转矩-转差率曲线将沿转差率轴压缩。由于电机曲线关于转差率呈现先上升后下降的趋势，因此电机的启动转矩将增大。但其数值受电机最大转矩的影响。<br>单相异步电机的启动方式包括：电容启动、电阻启动、PTC启动等、罩极启动等。<br>由于感应电机单相绕组在转子静止时，无法产生旋转磁势，因此只有单相绕组的异步电机无法自启动。对此，需要在单相异步电机上安装有于主绕组成90°的辅助绕组。该绕组主要用于电机的启动，当电机启动完成后可以切断该绕组或用于电机的运转。<br>为了使电机产生旋转磁势，就必须使电机绕组在转子静止时能够产生旋转磁势。为此，需要有在空间上互成90°的两个绕组，并通入相位上互差90°的电流。由于电机绕组成感性、因此可以利用电容和电阻使2个绕组互成90°。PTC启动，是使用PTC电阻，当电机运转到一定速度后，电机的温度将升高，此时PTC电阻达到剧里温度，电阻自动切断。<br>同步电机由于转子以同步速旋转，不存在转差率。当转子的速度与同步速相差较大时，将产生失步现象，因此无法自启动。同步电机的启动方式包括：变频启动、异步电机带动启动、线性电机自启动。<br>对于变频启动，通常设定启动电压频率的变化率，当电机运转到额定转速的60至80后，向电机加入额定频率，直接带入同步。异步电机带动启动类似。对于线性电机，其转子结构为永磁体+鼠笼。鼠笼用于启动过程。当电机运转至同步速后，鼠笼不再产生电磁转矩。</p><h5 id="调速控制"><a href="#调速控制" class="headerlink" title="调速控制"></a>调速控制</h5><p>电机调速方法包括：串电阻调速、变频调速、变极调速及矢量控制、直接转矩控制等。<br>串电阻调速主要用于异步电机。调速范围受到电机最大转矩限制。<br>变频调速适用于感应电机。通过调节同步速达到调速的目的。<br>变极调速通过改变电机极数，产生1/2、1/3…的转速。<br>矢量控制技术是由德国学者Blaschke在1971年提出的。通过对电机的励磁绕组和电枢绕组解耦，使控制感应电机与控制直流电机一样。通过分别调节电机励磁与电枢电流的大小，来控制电机的转矩、转速、反电动势等。<br>直接转矩控制由德国学者Depenbrock于1985年提出。它直接控制定子磁链空间矢量和电磁转矩，具有快速响应的能力。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this is the third passage of HEXO&lt;br&gt;SEVO 实验室&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>the second passage</title>
    <link href="http://qinzhengchao.github.io/2019/02/27/title/"/>
    <id>http://qinzhengchao.github.io/2019/02/27/title/</id>
    <published>2019-02-27T13:01:39.000Z</published>
    <updated>2019-02-28T05:52:57.489Z</updated>
    
    <content type="html"><![CDATA[<p>this is the second passage of HEXO<br>SEVO 实验室<br><a id="more"></a></p><h1 id="二极管"><a href="#二极管" class="headerlink" title="二极管"></a><strong>二极管</strong></h1><h3 id="二极管分类"><a href="#二极管分类" class="headerlink" title="二极管分类"></a><strong>二极管分类</strong></h3><h5 id="二极管分为检波二极管、整流二极管、稳压二极管、开关二极管、肖特基二极管、发光二极管等。"><a href="#二极管分为检波二极管、整流二极管、稳压二极管、开关二极管、肖特基二极管、发光二极管等。" class="headerlink" title="二极管分为检波二极管、整流二极管、稳压二极管、开关二极管、肖特基二极管、发光二极管等。"></a>二极管分为检波二极管、整流二极管、稳压二极管、开关二极管、肖特基二极管、发光二极管等。</h5><h3 id="六类二极管的作用"><a href="#六类二极管的作用" class="headerlink" title="六类二极管的作用"></a><strong>六类二极管的作用</strong></h3><h4 id="1-检波二极管"><a href="#1-检波二极管" class="headerlink" title="1.检波二极管"></a><strong>1.检波二极管</strong></h4><h5 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h5><p>检波二极管是用于把叠加在高频载波上的低频信号检出来的器件，它具有较高的检波效率和良好的频率特性。<br><img src="/images/检波二极管.jpg" alt=""></p><h5 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h5><p>检波（也称解调）二极管的作用是利用其单向导电性将高频或中频无线电信号中的低频信号或音频信号取出来。</p><h5 id="原理"><a href="#原理" class="headerlink" title="原理:"></a>原理:</h5><p>调幅波信号是二极管检波电路的输入，二极管只允许单向导电，，使用的是硅管，则只有电压高于0.7V的部分通过二极管。，二极管的输出端连接了一个电容，电容与电阻配合对二极管输出中的高频信号对地短路，使得输出信号基本上信号包络线。电容和电阻构成的这种电路功能叫做滤波。从输入信号中取出调制信号是检波，以整流电流的大小（100mA）作为界线通常把输出电流小于100mA的叫检波。锗材料点接触型、工作频率可达400MHz，正向压降小，结电容小，检波效率高，频率特性好，为2AP型。类似点触型那样检波用的二极管，除用于一般二极管检波外，还能够用于限幅、削波、调制、混频、开关等电路。也有为调频检波专用的特性一致性好的两只二极管组合件。狭义的检波是指从调幅波的包络提取调制信号的过程。有时把这种检波称为包络检波或幅度检波。调幅波的解调即是从调幅信号中取出调制信号的过程，通常称为检波。调幅波解调方法有二极管包络检波器、同步检波器。不论哪种振幅调制信号，都可采用相乘器和低通滤波器组成的同步检波电路进行解调。，普通调幅信号，它的载波分量被抑制掉，直接非线性器件实现相乘作用，得到所需的解调电压，而不必另加同步信号，通常将这种振幅检波器称为包络检波器。目前应用最广的是二极管包络检波器，而在集成电路中，主要采用三极管射极包络检波器。同步检波，又称相干检波，主要用来解调双边带和单边带调制信号，它有两种实现电路。一种由相乘器和低通滤波器组成，另一种直接采用二极管包络检波。工程中，有一类信号叫做调幅波信号(AM信号)，这是一种用低频信号控制高频信号幅度的特殊信号。把低频信号取出来，的电路，叫做检波电路。使用二极管组成最简单的调幅波检波电路。<br><img src="/images/检波电路.jpg" alt=""><br>如图所示是二极管检波电路。电路中的VD1是检波二极管，C1是高频滤波电容，R1是检波电路的负载电阻，C2是耦合电容。检波电路主要由检波二极管VD1构成。<br>在检波电路中，调幅信号加到检波二极管的正极，这时的检波二极管工作原理与整流电路中的整流二极管工作原理基本一样，利用信号的幅度使检波二极管导通，如图所示是调幅波形展开后的示意图。从展开后的调幅信号波形中可以看出，它是一个交流信号，只是信号的幅度在变化。这一信号加到检波二极管正极，正半周信号使二极管导通，负半周信号使二极管截止，这样相当于整流电路工作一样，在检波二极管负载电阻R1上得到正半周信号的包络，即信号的虚线部分，见图中检波电路输出信号波形(不加高频滤波电容时的输出信号波形)。<br>检波电路输出信号由音频信号、直流成分和高频载波信号三种信号成分组成，详细的电路分析需要根据三种信号情况进行展开。这三种信号中，最重要的是音频信号处理电路的分析和工作原理的理解。</p><h5 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h5><p>应用于半导体收音机、收录机、电视机及通信等设备的小信号电路中，其工作频率较高，处理信号幅度较弱。</p><h4 id="2-整流二极管"><a href="#2-整流二极管" class="headerlink" title="2.整流二极管"></a><strong>2.整流二极管</strong></h4><h5 id="定义：-1"><a href="#定义：-1" class="headerlink" title="定义："></a>定义：</h5><p>一种将交流电能转变为直流电能的半导体器件。通常它包含一个PN结，有正极和负极两个端子。<br><img src="/images/整流二极管.jpg" alt=""></p><h5 id="应用：-1"><a href="#应用：-1" class="headerlink" title="应用："></a>应用：</h5><p>整流二极管主要用于各种低频半波整流电路，如需达到全波整流需连成整流桥使用。<br><img src="/images/整流二极管1.jpg" alt=""><br><img src="/images/整流二极管2.jpg" alt=""><br><img src="/images/整流二极管3.jpg" alt=""></p><h5 id="常用参数："><a href="#常用参数：" class="headerlink" title="常用参数："></a>常用参数：</h5><p>(1)最大平均整流电流IF:指二极管长期工作时允许通过的最大正向平均电流。该电流由PN结的结面积和散热条件决定。使用时应注意通过二极管的平均电流不能大于此值，并要满足散热条件。例如1N4000系列二极管的IF为1A。<br>(2)最高反向工作电压VR:指二极管两端允许施加的最大反向电压。若大于此值，则反向电流(IR)剧增，二极管的单向导电性被破坏，从而引起反向击穿。通常取反向击穿电压(VB)的一半作为(VR)。例如1N4001的VR为50V，1N4002-1n4006分别为100V、200V、400V、600V和800V，1N4007的VR为1000V<br>(3)最大反向电流IR:它是二极管在最高反向工作电压下允许流过的反向电流，此参数反映了二极管单向导电性能的好坏。因此这个电流值越小，表明二极管质量越好。<br>(4)击穿电压VB:指二极管反向伏安特性曲线急剧弯曲点的电压值。反向为软特性时，则指给定反向漏电流条件下的电压值。<br>(5)最高工作频率fm:它是二极管在正常情况下的最高工作频率。主要由PN结的结电容及扩散电容决定，若工作频率超过fm，则二极管的单向导电性能将不能很好地体现。例如1N4000系列二极管的fm为3kHz。另有快恢复二极管用于频率较高的交流电的整流，如开关电源中。<br>(6)反向恢复时间trr:指在规定的负载、正向电流及最大反向瞬态电压下的反向恢复时间。<br>(7)零偏压电容CO:指二极管两端电压为零时，扩散电容及结电容的容量之和。值得注意的是，由于制造工艺的限制，即使同一型号的二极管其参数的离散性也很大。手册中给出的参数往往是一个范围，若测试条件改变，则相应的参数也会发生变化，例如在25°C时测得1N5200系列硅塑封整流二极管的IR小于10uA，而在100°C时IR则变为小于500uA。</p><h5 id="常用型号："><a href="#常用型号：" class="headerlink" title="常用型号："></a>常用型号：</h5><p>二极管型号，用途，最高反向工作电压VR，最大平均整流电流IF<br>1N4001 硅整流二极管 50V, 1A,(Ir=5uA,Vf=1V,Ifs=50A)<br>1N4002 硅整流二极管 100V, 1A,<br>1N4003 硅整流二极管 200V, 1A,<br>1N4004 硅整流二极管 400V, 1A,<br>1N4005 硅整流二极管 600V, 1A,<br>1N4006 硅整流二极管 800V, 1A,<br>1N4007 硅整流二极管 1000V, 1A,<br>1N4148 硅开关二极管 75V, 4PF,Ir=25nA,Vf=1V,<br>1N5391 硅整流二极管 50V, 1.5A,(Ir=10uA,Vf=1.4V,Ifs=50A)<br>1N5392 硅整流二极管 100V,1.5A,<br>1N5393 硅整流二极管 200V,1.5A,<br>1N5394 硅整流二极管 300V,1.5A,<br>1N5395 硅整流二极管 400V,1.5A,<br>1N5396 硅整流二极管 500V,1.5A,<br>1N5397 硅整流二极管 600V,1.5A,<br>1N5398 硅整流二极管 800V,1.5A,<br>1N5399 硅整流二极管 1000V,1.5A,<br>1N5400 硅整流二极管 50V, 3A,(Ir=5uA,Vf=1V,Ifs=150A)<br>1N5401 硅整流二极管 100V,3A,<br>1N5402 硅整流二极管 200V,3A,<br>1N5403 硅整流二极管 300V,3A,<br>1N5404 硅整流二极管 400V,3A,<br>1N5405 硅整流二极管 500V,3A,<br>1N5406 硅整流二极管 600V,3A,<br>1N5407 硅整流二极管 800V,3A,<br>1N5408 硅整流二极管 1000V,3A,<br>1S1553 硅开关二极管 70V,100mA,300mW, 3.5PF,300ma,<br>1S1554 硅开关二极管 55V,100mA,300mW, 3.5PF,300ma,<br>1S1555 硅开关二极管 35V,100mA,300mW, 3.5PF,300ma,<br>1S2076 硅开关二极管 35V,150mA,250mW, 8nS, 3PF,450ma, Ir≤1uA,Vf≤0.8V,≤1.8PF,<br>1S2076A 硅开关二极管 70V,150mA,250mW,8nS, 3PF,450ma, 60V, Ir≤1uA,Vf≤0.8V,≤1.8PF,<br>1S2471 硅开关二极管 80V, Ir≤0.5uA,Vf≤1.2V,≤2PF,<br>1S2471B 硅开关二极管 90V,150mA,250mW,3nS,3PF,450ma,<br>1S2471V 硅开关二极管 90V,130mA,300mW,4nS,2PF,400ma,<br>1S2472 硅开关二极管 50V, Ir≤0.5uA,Vf≤1.2V,≤2PF,<br>1S2473 硅开关二极管 35V, Ir≤0.5uA,Vf≤1.2V,≤3PF,<br>1S2473H 硅开关二极管 40V,150mA,300mW,4nS,3PF,450ma,<br>2AN1 二极管 5A, f=100KHz<br>2CK100 硅开关二极管 40V,150mA,300mW,4nS,3PF,450ma,<br>2CK101 硅开关二极管 70V,150mA,250mW,8nS, 3PF,450ma,<br>2CK102 硅开关二极管 35V,150mA,250mW, 8nS, 3PF,450ma,<br>2CK103 硅开关二极管 20V,100mA, 2PF,100ma,<br>2CK104 硅开关二极管 35V,100mA, 10nS,2PF,225ma,<br>2CK105 硅开关二极管 35V,100mA, 4nS,2PF,225ma,<br>2CK106 硅开关二极管 75V,100mA, 4nS,2PF,100ma,<br>2CK107 硅开关二极管 90V,130mA,300mW,4nS,2PF,400ma,<br>2CK108 硅开关二极管 70V,100mA,300mW, 3.5PF,300ma,<br>2CK109 硅开关二极管 35V,100mA,300mW, 3.5PF,300ma,<br>2CK110 硅开关二极管 90V,150mA,250mW,3nS,3PF,450ma,<br>2CK111 硅开关二极管 55V,100mA,300mW, 3.5PF,300ma,<br>2CK150 硅开关二极管 15V, Ir≤25nA, Vf≤1.2V,≤2PF,<br>2CK161 硅开关二极管 15V, Ir≤25nA, Vf≤1.2V,≤2PF,<br>2CK4148 硅开关二极管 75V, Ir≤25nA,Vf=1V,4PF,<br>2CK2076 硅开关二极管 35V, Ir≤1uA,Vf≤0.8V, ≤1.8PF,<br>2CK2076A硅开关二极管 60V, Ir≤1uA,Vf≤0.8V, ≤1.8PF,<br>2CK2471 硅开关二极管 80V, Ir≤0.5uA,Vf≤1.2V,≤2PF,<br>2CK2472 硅开关二极管 50V, Ir≤0.5uA,Vf≤1.2V,≤2PF,<br>2CK2473 硅开关二极管 35V, Ir≤0.5uA,Vf≤1.2V,≤3PF,<br>2CN1A 硅二极管 400V, 1A, f=100KHz,<br>2CN1B 硅二极管 100V, 1A, f=100KHz,<br>2CN3 硅二极管 V, 1A, f=100KHz,<br>2CN3D 硅二极管 V, 1A, f=100KHz,<br>2CN3E 硅二极管 V, 1A, f=100KHz,<br>2CN3F 硅二极管 V, 1A, f=100KHz,<br>2CN3G 硅二极管 V, 1A, f=100KHz,<br>2CN3H 硅二极管 V, 1A, f=100KHz,<br>2CN3I 硅二极管 V, 1A, f=100KHz,<br>2CN3K 硅二极管 V, 1A, f=100KHz,<br>2CN4D 硅二极管 V, 1.5A,f=100KHz,<br>2CN5D 硅二极管 V, 1.5A, f=100KHz,<br>2CN6 硅二极管 V, 1A, f=100KHz,<br>2CP1553 硅二极管 Ir≤0.5uA,Vf≤1.4V,≤3.5PF,<br>2CP1554 硅二极管 Ir≤0.5uA,Vf≤1.4V,≤3.5PF,<br>2CP1555 硅二极管 Ir≤0.5uA,Vf≤1.4V,≤3.5PF, </p><h4 id="3-稳压二极管"><a href="#3-稳压二极管" class="headerlink" title="3.稳压二极管"></a><strong>3.稳压二极管</strong></h4><h5 id="定义：-2"><a href="#定义：-2" class="headerlink" title="定义："></a>定义：</h5><p>稳压二极管又叫齐纳二极管。利用pn结反向击穿状态，其电流可在很大范围内变化而电压基本不变的现象，制成的起稳压作用的二极管。</p><h5 id="应用：-2"><a href="#应用：-2" class="headerlink" title="应用："></a>应用：</h5><p>稳压管主要被作为稳压器或电压基准元件使用。稳压二极管可以串联起来以便在较高的电压上使用，通过串联就可获得更高的稳定电压。<br>1、浪涌保护电路(如图2):稳压管在准确的电压下击穿，这就使得它可作为限制或保护之元件来使用，因为各种电压的稳压二极管都可以得到，故对于这种应用特别适宜.图中的稳压二极管D是作为过压保护器件.只要电源电压VS超过二极管的稳压值D就导通，使继电器J吸合负载RL就与电源分开.<br><img src="/images/浪涌保护电路.jpg" alt=""><br>2、电视机里的过压保护电路(如图3):<br><img src="/images/过压保护电路.jpg" alt=""><br>EC是电视机主供电压，当EC<br>电压过高时，D导通，三极管BG导通，其集电极电位将由原来的高电平(5V)变为低电平，通过待机控制线的控制使电视机进入待机保护状态.<br>3、电弧抑制电路如图4<br><img src="/images/电弧抑制电路.jpg" alt=""><br>在电感线圈上并联接入一只合适的稳压二极管(也可接入一只普通二极管原理一样)的话，当线圈在导通状态切断时，由于其电磁能释放所产生的高压就被二极管所吸收，所以当开关断开时，开关的电弧也就被消除了。这个应用电路在工业上用得比较多，如一些较大功率的电磁吸控制电路就用到它.<br>4、串联型稳压电路(如图5):<br><img src="/images/串联型稳压电路.jpg" alt=""><br>在此电路中，串联稳压管，BG的基极被稳压二极管D钳定在13V，那么其发射极就输出恒定的12V电压了.这个电路在很多场合下都有应用。</p><h5 id="稳压原理："><a href="#稳压原理：" class="headerlink" title="稳压原理："></a>稳压原理：</h5><p>稳压二极管的特点就是反向通电尚未击穿前，其两端的电流基本保持不变。这样，当把稳压管接入电路以后，若由于电源电压发生波动，或其它原因造成电路中各点电压变动时，负载两端的电压将基本保持不变。<br>稳压二极管在电路中常用”ZD”加数字表示，如:ZD5表示编号为5的稳压管。</p><h4 id="4-开关二极管"><a href="#4-开关二极管" class="headerlink" title="4.开关二极管"></a><strong>4.开关二极管</strong></h4><h5 id="定义：-3"><a href="#定义：-3" class="headerlink" title="定义："></a>定义：</h5><p>开关二极管是半导体二极管的一种，是为在电路上进行”开”、”关”而特殊设计制造的一类二极管。它由导通变为截止或由截止变为导通所需的时间比一般二极管短，常见的有2AK、2DK等系列。<br><img src="/images/开关二极管.jpg" alt=""></p><h5 id="工作原理："><a href="#工作原理：" class="headerlink" title="工作原理："></a>工作原理：</h5><p>半导体二极管导通时相当于开关闭合(电路接通)，截止时相当于开关打开(电路切断)，所以二极管可作开关用，常用型号为1N4148。由于半导体二极管具有单向导电的特性，在正偏压下PN结导通，在导通状态下的电阻很小，约为几十至几百欧;在反向偏压下，则呈截止状态，其电阻很大，一般硅二极管在10ΜΩ以上，锗管也有几十千欧至几百千欧。利用这一特性，二极管将在电路中起到控制电流接通或关断的作用，成为一个理想的电子开关。<br>以上的描述，其实适用于任何一支普通的二极管，或者说是二极管本身的原理。但针对于开关二极管，最重要的特点是高频条件下的表现。<br>高频条件下，二极管的势垒电容表现出来极低的阻抗，并且与二极管并联。当这个势垒电容本身容值达到一定程度时，就会严重影响二极管的开关性能。极端条件下会把二极管短路，高频电流不再通过二极管，而是直接绕路势垒电容通过，二极管就失效了。而开关二极管的势垒电容一般极小，这就相当于堵住了势垒电容这条路，达到了在高频条件下还可以保持好的单向导电性的效果。</p><h5 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h5><p>开关二极管分为普通开关二极管、高速开关二极管、超高速开关二极管、低功耗开关二极管、高反压开关二极管、硅电压开关二极管等多种。</p><p>折叠<br>普通开关二极管<br>常用的国产普通开关二极管有2AK系列锗开关二极管，表4-8为2AK系开关二极管的主要参数。</p><p>高速开关二极管<br>高速开关二极管较普通开关二极管的反向恢复时间更短，开、关频率更快。<br>常用的国产高速开关二极管有2CK系列。<br>进口高速开关二极管有1N系列、1S系列、1SS系列(有引线塑封)和RLS系列(表面安装)。</p><p>超高速开关二极管<br>常用的超高速二极管有1SS系列(有引线塑封)和RLS系列(表面封装)。</p><p>低功耗开关二极管<br>低功耗开关二极管的功耗较低，但其零偏压电容和反向恢复时间值均较高速开关二极管低。<br>常用的低功耗开关二极管有RLS系列(表面封装)和1SS系列(有引线塑封)。</p><p>高反压开关二极管<br>高反压开关二极管的反向击穿电压均在220V以上，但其零偏压电容和反向恢复时间值相对较大。<br>常用的高反压开关二极管有RLS系列(表面封装)和1SS系列(有引线塑封) 。</p><p>硅电压开关二极管<br>硅电压开关二极管是一种新型半导体器件，有单向电压开关二极管和双向电压开关二极管之分，主要应用于触发器、过压保护电路、脉冲发生器及高压输出、延时、电子开关等电路。<br>单向电压开关二极管也称转折二极管，邮PnPN四层结构的硅半导体材料组成，其正向为负阻开关特性(指当外加电压升高到正向转折电压值时，开关二极管由截止状态变为导通状态，即由高阻转为低阻)，反向为稳定特性。双向电压二极管由NPnPN五层结构的硅半导体材料组成，其正向和反向均具有相同的负阻开关特性。</p><h5 id="应用：-3"><a href="#应用：-3" class="headerlink" title="应用："></a>应用：</h5><p>主要用于电子计算机、脉冲和开关电路中。广泛应用于电子设备的开关电路、检波电路、高频和脉冲整流电路及自动控制电路中。<br><img src="/images/开关二极管1.jpg" alt=""><br><img src="/images/开关二极管2.jpg" alt=""></p><h5 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h5><p>开关二极管具有开关速度快、体积小、寿命长、可靠性高等特点。</p><h4 id="5-肖特基二极管"><a href="#5-肖特基二极管" class="headerlink" title="5.肖特基二极管"></a><strong>5.肖特基二极管</strong></h4><h5 id="定义：-4"><a href="#定义：-4" class="headerlink" title="定义："></a>定义：</h5><p>肖特基二极管是以其发明人肖特基博士（Schottky）命名的，SBD是肖特基势垒二极管的简称。<br><img src="/images/肖特基二极管1.jpg" alt=""></p><h5 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h5><p>SBD不是利用P型半导体与N型半导体接触形成PN结原理制作的，而是利用金属与半导体接触形成的金属－半导体结原理制作的。SBD的结构及特点使其适合于在低压、大电流输出场合用作高频整流，在非常高的频率下（如X波段、C波段、S波段和Ku波段）用于检波和混频，在高速逻辑电路中用作箝位。典型的肖特基整流管的内部电路结构是以N型半导体为基片，在上面形成用砷作掺杂剂的N-外延层。阳极使用钼或铝等材料制成阻档层。用二氧化硅(SiO2)来消除边缘区域的电场，提高管子的耐压值。N型基片具有很小的通态电阻，其掺杂浓度较H-层要高100%倍。在基片下边形成N+阴极层，其作用是减小阴极的接触电阻。通过调整结构参数，N型基片和阳极金属之间便形成肖特基势垒，如图所示。当在肖特基势垒两端加上正向偏压(阳极金属接电源正极，N型基片接电源负极)时，肖特基势垒层变窄，其内阻变小;反之，若在肖特基势垒两端加上反向偏压时，肖特基势垒层则变宽，其内阻变大。<br>综上所述，肖特基整流管的结构原理与PN结整流管有很大的区别通常将PN结整流管称作结整流管，而把金属-半导管整流管叫作肖特基整流管，采用硅平面工艺制造的铝硅肖特基二极管也已问世，这不仅可节省贵金属，大幅度降低成本，还改善了参数的一致性。<br><img src="/images/肖特基二极管2.jpg" alt=""></p><p>#####作用：<br>肖特基二极管肖特基(Schottky)二极管，又称肖特基势垒二极管(简称 SBD)，它属一种低功耗、超高速半导体器件。最显著的特点为反向恢复时间极短(可以小到几纳秒)，正向导通压降仅0.4V左右。其多用作高频、低压、大电流整流二极管、续流二极管、保护二极管，也有用在微波通信等电路中作整流二极管、小信号检波二极管使用。在通信电源、变频器等中比较常见。<br>一个典型的应用，是在双极型晶体管 BJT 的开关电路里面，通过在 BJT 上连接 Shockley 二极管来箝位，使得晶体管在导通状态时其实处于很接近截止状态，从而提高晶体管的开关速度。这种方法是 74LS，74ALS，74AS 等典型数字 IC 的 TTL内部电路中使用的技术。<br>肖特基(Schottky)二极管的最大特点是正向压降 VF 比较小。在同样电流的情况下，它的正向压降要小许多。另外它的恢复时间短。它也有一些缺点:耐压比较低，漏电流稍大些。选用时要全面考虑。</p><h5 id="应用：-4"><a href="#应用：-4" class="headerlink" title="应用："></a>应用：</h5><p>SBD的结构及特点使其适合于在低压、大电流输出场合用作高频整流，在非常高的频率下(如X波段、C波段、S波段和Ku波段)用于检波和混频，在高速逻辑电路中用作箝位。在IC中也常使用SBD，像SBD?TTL集成电路早已成为TTL电路的主流，在高速计算机中被广泛采用。<br>除了普通PN结二极管的特性参数之外，用于检波和混频的SBD电气参数还包括中频阻抗(指SBD施加额定本振功率时对指定中频所呈现的阻抗，一般在200Ω~600Ω之间)、电压驻波比(一般≤2)和噪声系数等。<br><img src="/images/肖特基二极管应用电路1.jpg" alt=""><br><img src="/images/肖特基二极管应用电路2.jpg" alt=""></p><h4 id="6-发光二极管"><a href="#6-发光二极管" class="headerlink" title="6.发光二极管"></a><strong>6.发光二极管</strong></h4><h5 id="定义：-5"><a href="#定义：-5" class="headerlink" title="定义："></a>定义：</h5><p>发光二极管简称为LED。由含镓（Ga）、砷（As）、（P）、氮（N）等的化合物制成。当电子与空穴复合时能辐射出可见光，因而可以用来制成发光二极管。</p><h5 id="应用：-5"><a href="#应用：-5" class="headerlink" title="应用："></a>应用：</h5><p>在电路及仪器中作为指示灯，或者组成文字或数字显示。砷化镓二极管发红光，磷化镓二极管发绿光，碳化硅二极管发黄光，氮化镓二极管发蓝光。<br><img src="/images/发光二极管1.jpg" alt=""><br><img src="/images/发光二极管2.jpg" alt=""> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this is the second passage of HEXO&lt;br&gt;SEVO 实验室&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>the first passage</title>
    <link href="http://qinzhengchao.github.io/2019/02/15/the-first-passage/"/>
    <id>http://qinzhengchao.github.io/2019/02/15/the-first-passage/</id>
    <published>2019-02-15T14:21:29.000Z</published>
    <updated>2019-02-17T05:27:01.600Z</updated>
    
    <content type="html"><![CDATA[<p>this is the first passage of HEXO<br>SEVO 实验室<br><a id="more"></a></p><h1 id="近期学习总结"><a href="#近期学习总结" class="headerlink" title="近期学习总结"></a><strong>近期学习总结</strong></h1><p>从放假开始到现在进行了软件及硬件的学习，在这个过程中收获了很多</p><h3 id="硬件方面"><a href="#硬件方面" class="headerlink" title="硬件方面"></a><strong>硬件方面</strong></h3><p>从最开始的画元器件的原理图，到后来按照学长给的电驱原理图画属于自己的PCB，当然也遇到了很多的问题，在使用AD18的过程中，逐步学会了如何从已有的PCB中导出元件库，重新定义PCB shape尺寸，同时向实验室的其他同学请教，了解了更多AD18的快捷键组合，知道了如何进行原理图和PCB的交互，很大程度上提高了画板子的效率。当然，现在学习的内容还是非常的基础，开学之后还需要学习更多的知识。</p><h3 id="软件方面"><a href="#软件方面" class="headerlink" title="软件方面"></a><strong>软件方面</strong></h3><p>进入实验室之后才发现，在做智能车的时候所用到的知识确实的非常的基础，假期开始从新建工程开始，了解了如何选择启动文件，知道了包含文件的名称及次序。</p><h2 id="下面是我对串口通信的理解（参考《零死角玩转STM32》）"><a href="#下面是我对串口通信的理解（参考《零死角玩转STM32》）" class="headerlink" title="下面是我对串口通信的理解（参考《零死角玩转STM32》）"></a><strong>下面是我对串口通信的理解（参考《零死角玩转STM32》）</strong></h2><p>串口通信数据信号由发送设备的TXD接口传输到接收设备的RXD接口，二者之间要约定好波特率，常见的波特率为4800，9600，115200.有效数据的长度通常被约定为5，6，7，8位长。USART支持使用DMA，实现高速数据通信，假期任务四中就有DMA多通道采集电压，但是我不太能看懂USART功能框图，TX功能引脚是发送数据输出引脚，RX引脚是接收数据输出引脚，在正点原子的教程中了解SCLK引脚在后期可能会用到，现在应用范围较窄。（其他的引脚及其功能在trello中有详细的说明）</p><h3 id="串口通讯协议简介"><a href="#串口通讯协议简介" class="headerlink" title="串口通讯协议简介"></a>串口通讯协议简介</h3><p>串口通讯(Serial Communication)是一种设备间非常常用的串行通讯方式，因为它简单便捷，因此大部分电子设备都支持该通讯方式，电子工程师在调试设备时也经常使用该通讯方式输出调试信息。<br>在计算机科学里，大部分复杂的问题都可以通过分层来简化。如芯片被分为内核层和<br>片上外设；STM32 标准库则是在寄存器与用户代码之间的软件层。对于通讯协议，我们也以分层的方式来理解，最基本的是把它分为物理层和协议层。物理层规定通讯系统中具有机械、电子功能部分的特性，确保原始数据在物理媒体的传输。协议层主要规定通讯逻辑，统一收发双方的数据打包、解包标准。简单来说物理层规定我们用嘴巴还是用肢体来交流，协议层则规定我们用中文还是英文来交流</p><h3 id="USART-初始化结构体详解"><a href="#USART-初始化结构体详解" class="headerlink" title="USART 初始化结构体详解"></a>USART 初始化结构体详解</h3><p>标准库函数对每个外设都建立了一个初始化结构体，比如 USART_InitTypeDef，结构体成员用于设置外设工作参数，并由外设初始化配置函数，比如 USART_Init()调用，这些设定参数将会设置外设相应的寄存器，达到配置外设工作环境的目的。<br>初始化结构体和初始化库函数配合使用是标准库精髓所在，理解了初始化结构体每个<br>成员意义基本上就可以对该外设运用自如了。初始化结构体定义在stm32f10x_usart.h 文件中，初始化库函数定义在 stm32f10x_usart.c 文件中，编程时我们可以结合这两个文件内注<br>释使用。</p><h4 id="初始化结构体代码如下"><a href="#初始化结构体代码如下" class="headerlink" title="初始化结构体代码如下"></a>初始化结构体代码如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 typedef struct </span><br><span class="line">2 &#123;</span><br><span class="line">3 uint32_t USART_BaudRate;// 波特率</span><br><span class="line">4 uint16_t USART_WordLength;// 字长</span><br><span class="line">5 uint16_t USART_StopBits;// 停止位</span><br><span class="line">6 uint16_t USART_Parity;// 校验位</span><br><span class="line">7 uint16_t USART_Mode;// USART 模式</span><br><span class="line">8 uint16_tUSART_HardwareFlowControl;// 硬件流控制 </span><br><span class="line">&#125;</span><br><span class="line">9 USART_InitTypeDef;</span><br></pre></td></tr></table></figure><h4 id="USART-时钟初始化结构体"><a href="#USART-时钟初始化结构体" class="headerlink" title="USART 时钟初始化结构体"></a>USART 时钟初始化结构体</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 typedef struct &#123;</span><br><span class="line">2 uint16_t USART_Clock; // 时钟使能控制</span><br><span class="line">3 uint16_t USART_CPOL; // 时钟极性</span><br><span class="line">4 uint16_t USART_CPHA; // 时钟相位</span><br><span class="line">5 uint16_t USART_LastBit; // 最尾位时钟脉冲</span><br><span class="line">6 &#125; USART_ClockInitTypeD</span><br></pre></td></tr></table></figure><h4 id="GPIO-和-USART-宏定义"><a href="#GPIO-和-USART-宏定义" class="headerlink" title="GPIO 和 USART 宏定义"></a>GPIO 和 USART 宏定义</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1 /**</span><br><span class="line">2 * 串口宏定义，不同的串口挂载的总线和 IO 不一样，移植时需要修改这几个宏</span><br><span class="line">3 */</span><br><span class="line">4 </span><br><span class="line">5 // 串口 1-USART1</span><br><span class="line">6 #define DEBUG_USARTx USART1</span><br><span class="line">7 #define DEBUG_USART_CLK RCC_APB2Periph_USART1</span><br><span class="line">8 #define DEBUG_USART_APBxClkCmd RCC_APB2PeriphClockCmd</span><br><span class="line">9 #define DEBUG_USART_BAUDRATE 115200</span><br><span class="line">10 </span><br><span class="line">11 // USART GPIO 引脚宏定义</span><br><span class="line">12 #define DEBUG_USART_GPIO_CLK (RCC_APB2Periph_GPIOA)</span><br><span class="line">13 #define DEBUG_USART_GPIO_APBxClkCmd RCC_APB2PeriphClockCmd</span><br><span class="line">14 </span><br><span class="line">15 #define DEBUG_USART_TX_GPIO_PORT GPIOA</span><br><span class="line">16 #define DEBUG_USART_TX_GPIO_PIN GPIO_Pin_9</span><br><span class="line">17 #define DEBUG_USART_RX_GPIO_PORT GPIOA</span><br><span class="line">18 #define DEBUG_USART_RX_GPIO_PIN GPIO_Pin_10</span><br><span class="line">19 </span><br><span class="line">20 #define DEBUG_USART_IRQ USART1_IRQn</span><br><span class="line">21 #define DEBUG_USART_IRQHandler USART1_IRQHandler</span><br></pre></td></tr></table></figure><h2 id="下面是看正点原子所做的笔记"><a href="#下面是看正点原子所做的笔记" class="headerlink" title="下面是看正点原子所做的笔记"></a><strong>下面是看正点原子所做的笔记</strong></h2><p>学习STM32需要掌握库函数的基本配置方法。了解寄存器底层配置过程。基本外设包括GPIO输入输出，外部中断，定时器，串口。STM32最小系统包含供电复位时钟：外部晶振（两个），Boot启动模式选择，下载电路（串口/JTAG/SWD)，后备电池。USB串口有以下三个作用：</p><h4 id="1-可以当串口使用"><a href="#1-可以当串口使用" class="headerlink" title="1.可以当串口使用"></a>1.可以当串口使用</h4><h4 id="2-如果USB串口连接到STM32的串口1（STM32ISP下载只能是串口1）的话，那么可以用串口下载程序"><a href="#2-如果USB串口连接到STM32的串口1（STM32ISP下载只能是串口1）的话，那么可以用串口下载程序" class="headerlink" title="2.如果USB串口连接到STM32的串口1（STM32ISP下载只能是串口1）的话，那么可以用串口下载程序"></a>2.如果USB串口连接到STM32的串口1（STM32ISP下载只能是串口1）的话，那么可以用串口下载程序</h4><h4 id="3-因为要连接到USB，所以可以用USB供电"><a href="#3-因为要连接到USB，所以可以用USB供电" class="headerlink" title="3.因为要连接到USB，所以可以用USB供电"></a>3.因为要连接到USB，所以可以用USB供电</h4><p>（包含CH340驱动安装方法）</p><h4 id="如何新建STM32工程模板在trello中有详细的说明"><a href="#如何新建STM32工程模板在trello中有详细的说明" class="headerlink" title="如何新建STM32工程模板在trello中有详细的说明"></a>如何新建STM32工程模板在trello中有详细的说明</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this is the first passage of HEXO&lt;br&gt;SEVO 实验室&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://qinzhengchao.github.io/2019/02/05/hello-world/"/>
    <id>http://qinzhengchao.github.io/2019/02/05/hello-world/</id>
    <published>2019-02-05T14:13:32.076Z</published>
    <updated>2019-02-16T10:41:29.564Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
